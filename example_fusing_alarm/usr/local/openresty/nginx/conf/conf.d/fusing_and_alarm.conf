server {
    listen 10000;
    server_name _;

    #Please modify the rule file name used for validation
    location / {
        access_by_lua_block {
            local restybase = require("restybase")
            restybase.access_by_lua_block()
            
            local circuit_breaking_for_third_party_calls = require("circuit_breaking_for_third_party_calls")
            --set the name of the JSON-Formatted rule file used for validation
            if circuit_breaking_for_third_party_calls.access_by_lua_block({
                alarm_rule = "example_rule_alarms", 
                fuse_rule = "example_rule_fuse"
            }) then
                return ngx.exit(503)
            end
        }
        
        #set your third party uri
        proxy_pass http://192.168.3.108:18080;
        
        #Log the API Execution Time and Status
        header_filter_by_lua_block {
            local circuit_breaking_for_third_party_calls = require("circuit_breaking_for_third_party_calls")
            circuit_breaking_for_third_party_calls.header_filter_by_lua_block()
        }
    }

    #Execute regularly via crontab to periodically clear cached data in Redis.
    location = /circuit_breaking_for_third_party_calls_clear {
        allow 127.0.0.1;
        deny all;
        
        access_by_lua_block {
            local circuit_breaking_for_third_party_calls = require("circuit_breaking_for_third_party_calls")
            --clear commmand exec status data from x seconds ago
            local logs = circuit_breaking_for_third_party_calls.access_by_lua_block_clear(600)
            ngx.header.content_type = 'text/plain; charset=utf-8'
            ngx.say(logs)
            ngx.exit(ngx.HTTP_OK)
        }
    }
}