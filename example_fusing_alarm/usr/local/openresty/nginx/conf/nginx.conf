
#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

stream {
    include conf.d/*.stream;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  30s;
    types_hash_max_size 4096;

    #gzip  on;

    #Transparently Pass Through the Client's Real IP Address
    proxy_set_header  Host $host:$server_port;
    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header  X-Real-PORT $remote_port;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;

    #Add the Custom 'scripts' Directory to OpenResty's Lua Path
    lua_package_path "/usr/local/openresty/nginx/conf/scripts/?.lua;;";
    #Cache the Lua code; please do not turn it off.
    lua_code_cache on;
    
    #1.Initialize RestyBase, Set Redis Configuration, and Set the Directory for Rule JSON Files
    #2.Initialize circuit_breaking_for_third_party_calls, Set alarm_http_url
    init_by_lua_block {
        local restybase = require("restybase")
        restybase.init_by_lua_block({
            redis = {
                host = "127.0.0.1",     --redis host
                port = 6379,            --redis port
                auth = "password",      --redis requirepass
                pool_size = 32,         --client connection pool size
                idle_millis = 10000     --max milliseconds of a connection stays idle in the connection pool
            },  
            rule_path = "/usr/local/openresty/nginx/conf/rules"
        })
        
        local circuit_breaking_for_third_party_calls = require("circuit_breaking_for_third_party_calls")
        circuit_breaking_for_third_party_calls.init_by_lua_block({
            expired_seconds = 600,
            alarm_http_url = "http://192.168.3.108:18888/guest/alarm"    --set your alarm post url
        })
    }

    #1.Execute RestyBase initialization in each worker
    #2.Health Check, Configure one entry for each upstream. Please modify the HTTP URL for health checks of each upstream
    init_worker_by_lua_block{
        local restybase = require("restybase")
        restybase.init_worker_by_lua_block()
    }

    include conf.d/*.conf;

}
